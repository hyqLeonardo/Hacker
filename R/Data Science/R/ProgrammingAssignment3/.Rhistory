skewness(x)
agostino.test(x)
m4 <- moment(duration, order = 4, center = T)
m4 <- moment(duration, order = 4, center = TRUE)
m4
m4 <- moment(duration, order = 4)
m4
m2 <- moment(duration, order = 2)
m2
m4/(m4^2)
m4/(m4^2)-3
kurtosis(duratoin)
kurtosis(duration)
moment(duration, order=3, center=TRUE)
moment(duration, order = 3)
?moment
moment(duration, order = 3, center = FALSE)
moment(duration, order = 3, FALSE)
moment(duration, order = 3, TRUE)
m4 = moment(duration, order = 4, TRUE)
m4
m2 <- moment(duration, order = 2, TRUE)
m4/(m2^2)
[1]
ans
m4/(m2^2)-3
kurtosis(duration)
m4/(sd(duration)^4) - 3
kutosis(duration)
kurtosis(duration)
hist(duration)
m2
sd(duration)
sd(duration)^2
sd(1:2)
sd(1:3)
sd(1:5)
.5^(1/2)
var(1:2)
m4/(var(duration)^2)
m4/(var(duration)^2) - 3
length(duration)
n <- 272
m3
m3 <- moment(duration, order = 3, TRUE)
m3
m3/((n-1)*sd(duration)^3)
skewness(duration)
agostino.test(duration)
m2
var(duration)
length(x)
hist(x)
var(X)
var(x)
moment(duration, order = 2)
moment(duration, order = 2)
moment(duration, order = 2, TRUE)
moment(duration, order = 1, TRUE)
sum(x)/length(x)
for i = 1 : length(x)
for i in 1:length(x)
for (i in 1:length(x))
{}
for (i in 1:length(x))
{a[i] <- (x[i] - mean(x))^2}
?rep
a <- rep(0, length(x))
for (i in 1:length(x))
{a[i] <- (x[i] - mean(x))^2}
a
sum(a)/length(x)
var(x)
var(x)^1/2
sd(x)
var(x)^(1/2)
for (i in 1:length(x))
{a[i] <- x[i]-mean(x)}
sum(a)/length(x)
sum(a)
moment(x, order = 1, TRUE)
moment(x, order = 2, TRUE)
for (i in 1:length(x))
{a[i] <- (x[i]-mean(x))^4}
sum(a)/length(x)
moment(x, order = 4, T)
agostino.test(x)
kurtosis(x)
summary(x)
table(x)
class(x)
mode(c(1, 2, 3 ,2, 2, 3, 2))
temp <- table(as.vector(x))
names(temp)[temp == max(temp)]
c <- c(1, 2, 3, 1, 1,1 ,2, 3)
table(c)
str(table(c))
temp <- table(c)
class(temp)
names(temp)
max(temp)
names(temp)[temp == max(temp)]
m3_x <- moment(x, order = 3, T)
m3-x
m3_x
m3_x/(sd(x)^3)
skewness(x)
moment(x, order = 3)/(sd(x)^3)
m4_x  = moment(x, order = 4, T)
m4_x/(var(x)^2) - 3
agostino.test(x)
kurtosis(x)
z
-0.0446^3
for(i in 1:length(x)
)
{a[i] <- (x[i]-mean(x))^2}
sum(a)/(length(x)-1)
var(x)
for(i in 1:length(x)
)
{a[i] <- (x[i]-mean(x))^3}
sum(a)/(length(x)-1)
m3_x/(sd(x)^3)
m3_x <- sum(a)/(length(x)-1)
m3_x/(sd(x)^3)
for (i in 1:length(x))
{a[i] <- (x[i]-mean(x))}
s <- sum(a)/(length(x)-1)
m3_x/(s^3)
for (i in 1:length(x))
{a[i] <- (x[i]-mean(x))^3}
m3_x <- sum(a)/(length(x)-1)
sk <- m3_x/(sd(x)^3)
sk
skewness(x)
for (i in 1:length(x))
{b[i] <- (x[i]-mean(x))^4}
for (i in 1:length(x))
{a[i] <- (x[i]-mean(x))^4}
m3_x <- sum(a)/(length(x)-1)
m4_x <- m3_x
m4_x/(sd(x)^4)
kurtosis(x)
q()
data
load("E:/Desktop (important)/Introductory Econometrics/R/R data sets for 5e/wage1.RData")
str(data)
names(data)
self
desc
sumamry(data$educ)
summary(data$educ)
mean(data$wage)
mean(data$wage) * (184/56.9)
sum(data$female)
loadload("E:/Desktop (important)/Introductory Econometrics/R/BWGHT.RData")
load("E:/Desktop (important)/Introductory Econometrics/R/BWGHT.RData")
desc
str(data)
sum(data$cigs)
logic <- data$cigs != 0
logic
sum(logic)
mean(data$cigs)
summary(data$cigs)
smoke <- data$cigs(>0)
smoke <- data$cigs(which(data$cigs > 0))
smoke <- data$cigs[which(data$cigs > 0)]
smoke
mean(smoke)
dim(data)
mean(data$fatheduc)
mean(data$fatheduc, na.rm = TRUE)
is.na(data$fatheduc)
log <- is.na(data$fatheduc)
sum(log)
dim(data)[1, 1] - sum(log)
class(dim(data))
dim(data)[1] - sum(log)
desc
summary(faminc)
summary(data$faminc)
var(data$faminc)
sd(data$faminc)
351.1608^(1/2)
load("E:/Desktop (important)/Introductory Econometrics/R/R data sets for 5e/meap01.RData")
load("E:/Desktop (important)/Introductory Econometrics/R/meap01.RData")
str(data)
desc
summary(data$math4)
sum(data$math4[which(data$math4 == 100)])
38/dim(data)[1]
sum(data$math4 == 50)
mean(data$math4)
mean(data$read4)
?corr
?cor
cor(data$math4, data$read4)
mr_lm <- lm(data$read4 ~ data$math4)
summary(mr_lm)
plot(mr_lm)
plot(data$math4, data$read4)
mean(data$exppp)
st(data$exppp)
sd(data$exppp)
plot(data$exppp)
500/5500
100*(log(6000) - log(5500))
load("E:/Desktop (important)/Introductory Econometrics/R/jtrain2.RData")
str(data)
desc
mean(train)
mean(data$train)
sum(data$train)/dim(data)[1]
receive <- data$re78[which(data$train == 1)]
head(receive)
not_receive <- data$re78[which(data$train == 0)]
head(not_receive)
length(receive)
length(not_receive)
dim(data)
mean(receive)
mean(not_receive)
rec <- data$unem78[which(data$train == 1)]
mean(rec)
not_rec <- data$unem78[which(data$train == 0)]
mean(not_rec)
load("E:/Desktop (important)/Introductory Econometrics/R/fertil2.RData")
str(data)
summary(data$children)
mean(data$electric)
mean(data$electric, na.rm = T)
with <- data$children[which(data$electric == 1)]
without <- data$children[which(data$electric == 0)]
mean(with)
mean(without)
clear()
q()
?format
format(1:10)
1:10
format(1:10, trim = T)
zz <- data.frame("(row names)" = c("aaaaa", "b"), check.names = F)
zz
format(zz)
format(zz, justify = "left")
format(13.7)
format(13.7, nsmall = 3)
format(c(6.0, 13.1), digits = 2)
format(c(6.0, 13.1), digits = 2, nsmall = 1)
format(c(6.0, 13.1), digits = 1, nsmall = 1)
format(c(6.0, 13.1), digits = 5, nsmall = 1)
format(c(6.0, 13.1), digits = 0, nsmall = 1)
format(2^31-1)
format(2^31-1, scientific = T)
format(c(6.0, 13.1), digits = 2, nsmall = 4)
format(c(123.123, 567.567), digits = 3)
format(c(123.123, 567.567), digits = 2)
format(c(123.123, 567.567), digits = 4)
format(c(123.123, 567.567), digits = 4, nsmall = 5)
format(c(123.123, 567.567), digits = 9, nsmall = 1)
?round
setwd("E:/Desktop (important)/Data Science/R/ProgrammingAssignment3")
data <- read.csv("outcome-of-care-measures.csv")
col <- 11
num <- 20
frame <- data.frame()
state_list <- levels(data[, "State"])
state_list <- levels(data$State)
i <- 3
state = state_list[i]
state_data <- data[data$State == state, ]
Raw <- as.numeric(as.character(state_data[, col]))
sort(Raw)[num]
class(sort(Raw)[num])
rate <- sort(Raw)[num]
hospital_factor <- state_data[state_data[, col] == rate, ]$Hospital.Name
hospital_factor
dim(hospital_factor)
str(hospital_factor)
rate <- format(round(sort(Raw)[num], 1), nsmall = 1)
rate
class(rate)
hospital_factor <- state_data[state_data[, col] == rate, ]$Hospital.Name
str(hospital_factor)
hospital <- sort(as.character(hospital_factor))
hospital
hospital_factor
frame_part <- data.frame(hospital, state)
frame_part
frame <- rbind(frame, frame_part)
frame
search()
source("rankall(first).R")
search()
head(rankall("heart attack", 20))
source("rankall.R")
head(rankall("heart attack", 20))
f <- function() {}
f <- function() {
x <- 1
y <- 2
c(x, y)
}
f
f()
rm(f)
?rm
f
x <- 2
f <- function() {
y <- 1
c(x, y)
}
f
f()
rm(x, y)
rm(x, f)
f
x <- 1
f <- function() {
y <- 2
g <- function() {
z <- 3
c(x, y, z)
}
g()
}
f
f()
f <- function(x) {
y <- 2
}
f <- function(x) {
y <- 2
}
f <- function(x) {
y <- 2
c(x, y)
}
f
k <- f(1)
k
k()
l <- function(x) x + 1
l
l(1)
m <- function() {
l <- function x*2
l(10)
}
m <- function() {
l <- function x*2
l(10)
}
m <- function() {
l <- function(x) x*2
l(10)
}
m()
rm(l, m)
n <- function(x) x/2
o <- function() {
n <- 10
n(n)
}
o()
j <- function() {
if (!exists("a")) {
a <- 1
} else {
a <- a + 1
}
print(a)
}
j()
j()
j()
a
f <- function() x
x <- 5
f()
x <- 10
f()
exists.package("codetools")
find.package("codetools")
f <- function() x + 1
codetools::findGlobals()
codetools::findGlobals(f)
environment(f)
environment(f) <- emptyenv()
emptyenv()
f()
?runif
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
f <- function(x) {
f <- function(x) {
f <- function(x) {
x ^ 2
}
f(x) + 1
}
f(x) * 2
}
f(10)
?do.call
codetools::findGlobals(mean)
codetools::findGlobals(f)
environment(f)
'+'(2, 3)
+(3, 2)
"+"(2, 3)
find.package("pryr")
formals(f)
body(f)
attributes(f)
sum
formals(sum)
body(sum)
environment(sum)
mena
mean
formals(mena)
formals(mean)
body(mean)
environment(mean)
find.package("base")
library(base)
ls()
list(base)
objs <- mget(ls("package:base"), inherits = T)
objs
str(objs)
ls("package:base")
?meget
?megt
?mget
s <- "sum"
mget(s)
mget(s, inherits = T)
get("%o%")
e1 <- new.env()
e1
mget(letters, e1, ifnotfound = as.list(LETTERS))
letters
mget(letters, e1)
mget(letters, e1, inherits = wt)
mget(letters, e1, inherits = T)
mget(letters, e1, ifnotfound = as.list(LETTERS), inherits = T)
?t
rm(t)
rm(f)
?o
o
rm(o)
?q
mget(letters, e1, ifnotfound(Letters), inherits = T)
?mget
mget(letters, e1, ifnotfound = as.list(LETTERS), inherits = T)
rm(j)
mget(letters, e1, ifnotfound = as.list(LETTERS), inherits = T)
n
rm(n)
mget(letters, e1, ifnotfound = as.list(LETTERS), inherits = T)
mget(letters, e1, ifnotfound = as.list(LETTERS), inherits = T)
a = 1
b = 2
f <- function(x)
{
a*x + b
}
g <- function(x)
{
a = 2
b = 1
f(x)
}
g(2)
rm(f)
rm(g)
f <- function(a, b) {
return(function(x) {
a*x + b
})
}
g
f
g <- f(2, 1)
g
g(2)
find.package(plyr)
find.package("plyr")
find.package("reshape2")
install.packages("reshape2")
q()
