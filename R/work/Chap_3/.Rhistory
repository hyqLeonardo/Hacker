params <- 4
params
mu <- params[1]
mu
sigma <- params[2]
sigma
params
set.seed(1);
normals <- rnorm(100,1, 2)
normals
summary(normals)
var(normals)
sd(normals)
nLL <- make.NegLogLik(normals)
nLL
ls(environment(nLL))
optim(c(mu = 0, sigma = 1), nLL)$par
?optim
a <- c(FALSE, 2)
a[!c]
a[!a]
a
a[!a] <- 1
a
nLL_2 <- make.NegLogLik(normals, c(FALSE, 2))
nLL_2
ls(environment(nLL_2))
optimize(nLL_2, c(-1, 3))$minimum
nLL_3 <- make.NegLogLik(normals, c(1, FALSE))
opitimize(nLL_3, c(1e-6, 10))$minimum
optimize(nLL_3, c(1e-6, 10))$minimum
nLL <- make.NegLogLik(normals, c(1, FALSE))
x <- seq(1.7, 1.9, len = 100)
x
y <- sapply(x, nLL)
y
nLL
plot(x, exp(-(y - min(y))), type = "1")
plot(x, exp(-(y - min(y))), type = "l")
nLL <- make.NegLogLik(normals, c(FALSE, 2))
x <- seq(0.5, 1.5, len = 100)
y <- sapply(x, nLL)
plot(x, exp(-y-min(y)), type = "l")
plot(x, exp(-y-min(y)))
plot(x, exp(-y-min(y)), type = "l")
library(xlsx)
library(xlsx)
load("E:/Leo_works/Introductory Econometrics/R/charity.RData")
mls <- lm(gift ~ mailsyear + giftlast + propresp, data)
ols <- lm(gift ~ mailsyear)
ols <- lm(gift ~ mailsyear, data)
desc
summary(ols)
summary(mls)
mls_2 <- mls(gift ~ mailsyear + giftlast + propresp + avggift, data)
mls_2 <- lm(gift ~ mailsyear + giftlast + propresp + avggift, data)
summary(mls_2)
cor(data$avggift, data$mailsyear)
desc
cor(data$avggift, data$giftlast)
load("E:/Leo_works/Introductory Econometrics/R/htv.RData")
summary(data$educ)
twelve <- data[which(data$educ == 12), ]
desc
length(twelve) / length(data)
dim(data)
dim(twelve)[1]/dim(data)[1]
mean(data$educ)
mean(mean(data$fatheduc), mean(data$motheduc))
mls <- lm(educ ~ motheduc + fatheduc, data)
summary(mls)
mls_3 <- lm(educ ~ motheduc + fatheduc + abil, data)
summary(mls_3)
summary(data$abil)
mls_4 <- lm(educ ~ motheduc + fatheduc + abil + abil^2, data)
coe <- mls_4coefficients
coe <- mls_4$coefficients
coe
coe[3]/(2*coe[4])
value <- -coe[3]/(2*coe[4])
value
less <- data[which(data$abil <= value), ]
dim(less)[1]/dim(data)[1]
education <- function(x) {
y <- coe[1]+coe[2]*12.18+coe[3]*12.45+coe[4]*x+coe[5]*x^2
}
coe
summary(mls4)
summary(mls_4)
mls_4 <- lm(educ ~ motheduc + fatheduc + abil + abil^2, data)
summary(mls_4)
head(data$abil^2)
mls_4 <- lm(educ ~ motheduc + fatheduc + abil + I(abil^2), data)
summary(mls_4)
coe <- mls_4$coefficients
coe
education <- function(x) {
y <- coe[1]+coe[2]*12.18+coe[3]*12.45+coe[4]*x+coe[5]*x^2
}
y <- education(data$abil)
head(y)
plot(x, y)
x <- data$abil
plot(x, y)
plot(x, y, 'l')
scat(x, y, 'l')
plot((x, y), 'l')
plot(x, y, type = "l")
plot(y, x, type = "l")
plot(x, y)
value
value <- -coe[4]/(2*coe[5])
value
coe
coe[4]
demo()
demo(Hershey)
demo(Japanese)
demo(image)
demo(graphics)
View(a)
rm(all)
?rm
remove()
demo(plotmath)
demo(persp)
demo(graphics)
demo(colors)
demo(hclColors)
demos(glm.vr)
demos(nlm)
demo(glm.vr)
demo(nlm)
demo(smooth)
demo(package = .packages(all.available = TRUE))
demo(pracma)
demo(tkcanvas)
vignette()
vignette(svmdoc)
vignette("svmdoc")
vignette("xlsx")
data()
library(lpSolveAPI)
vignettes(0)
vignettes()
vignette()
vignette("development")
vignette("release")
dim1 <- c("A1", "A2")
dim2 <- c("B1", "B2", "B3")
dim3 <- c("C1", "C2", "C3", "C4")
dim3
z <- array(1:24, c(2, 3, 4), dimnames = list(dim1, dim2, dim3))
z
z(2, 3, 3)
z[2, 3, 3]
?table
attach(mtcars)
summary(mpg)
plot(mpg, disp)
plot(mpg, wt)
detach(mtcars)
mpg <- c(25, 36, 47)
attach(mtcars)
plot(mpg, wt)
mpg
environment(mtcars$mpg)
environment(mpg)
?environment
?env
environment(mena)
environment(mean)
with(mtcars, {
stats <- summary(mpg)
})
stats
with(mtcars, {
stats <- summary(mpg)
stats
})
with(mtcars, {
nokeepstats <- summary(mpg)
keepstats <<- summary(mpg)
})
keepstats
diabetes <- c("Type1", "Type2", "Type1", "Type1")
diabetes
factor(diabetes)
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- data.frame(patientID, age, diabetes, status)
patientdata
diabetes <- factor(diabetes)
diabetes
status <- factor(status, ordered = TRUE)
status
status <- factor(status, ordered = TRUE, levels = c("Poor", "Improved", "Excellent")
)
status
patientID
age
status <- factor(status, order = TURE
)
status <- factor(status, order = TRUE)
status
patientdata <- data.frame(patientID, age, diabetes, status)
patientdata
str(patientdata)
summary(patientdata)
q()
patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- data.frame(patientID, age, diabetes,
status)
patientdata
patientdata$gender <- c(1 2 1 1)
patientdata$gender <- c(1, 2, 1, 1)
patientdata
patientdata$gender <- factor(patientgender, levels = c(1, 2), labels = c("male", "female"))
patientdata$gender <- factor(patientdata$gender, levels = c(1, 2), labels = c("male", "female"))
patientdata
str(patientdata)
mode(patientdata)
ls()
fix(patientdata)
fix(patientdata)
patientdata
x <- c(-0.5, 0, 1, 1, 1.5)
y <- c(0, 0, 2, 0, 0)
plot(x, y, lwd = 3, frame = FALSE, type = "l")
?plot
pbeta(0.75, 2, 1)
pbeta(0.75, 1, 2)
0.75^2
qbeta(0.5, 2, 1)
1-pnorm(-1.321013)
1-pnorm(1.321013)
pnorm(-2.13)
1- pnorm(1.52)
?t
pt(-2.13)
qt(-2.13)
pt(-2.13, df = 19)
pt(10.16675, df = 524)
pt(-1.321, df = 524)
pnorm(-1.321)
pt(1.321, df = 524)
1-0.906461
-0.904852/0.684968
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg ~ wt))
title("Rgression of MPG on Weight")
detach(mtcars)
getwd()
dir = "E:\Leo_works\Programming\R\work"
dir
d = "E:\Leo_works\Programming\R\work"
d
setwd("E:/Leo_works/Programming/R/work")
dat <- data.frame(
x = c(sample(0 : 1, nosim, replace = TRUE),
apply(matrix(sample(0 : 1, nosim * 10, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 20, replace = TRUE),
nosim), 1, mean),
apply(matrix(sample(0 : 1, nosim * 30, replace = TRUE),
nosim), 1, mean)
),
size = factor(rep(c(1, 10, 20, 30), rep(nosim, 4))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth = 1 / 12, colour = "black");
g + facet_grid(. ~ size)
dat <- data.frame(
library(UsingR); data(galton); library(ggplot2)
library(reshape2)
longGalton <- melt(galton, measure.vars = c("child", "parent"))
g <- ggplot(longGalton, aes(x = value)) + geom_histogram(aes(y = ..density..,  fill = variable), binwidth=1, colour = "black") + geom_density(size = 2)
g <- g + facet_grid(. ~ variable)
g
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon",
binwidth=1, aes(y = ..density..), colour = "black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mean(galton$child), size = 2)
g
setwd("E:\Leo_works\Programming\R\work\Chap_3")
setwd("E:/Leo_works/Programming/R/work/Chap_3")
dir.create(Chap_3)
dir.create("Chap_3")
setwd("./Chap_3")
getwd()
pdf("mygraph.pdf")
attach(mtcars)
search()
setwd("E:/Leo_works/Programming/R/work/Chap_3")
attach(mtcars)
plot(wt, mpg)
pdf("mygraph.pdf")
plot(wt, mpg)
aline(lm(mpg ~ wt))
abline(lm(mpg ~ wt))
title("Regression of mpg on wt")
detach(mtcars)
dev.off()
dev.new()
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
plot(dose, drugA, type = 'b')
par()
?par
op <- par(mfrow = c(2, 2), # 2 x 2 pictures on one plot
pty = "s")       # square plotting region,
# independent of device size
## At end of plotting, reset to previous settings:
par(op)
## Alternatively,
op <- par(no.readonly = TRUE) # the whole list of settable par's.
## do lots of plotting and par(.) calls, then reset:
par(op)
## Note this is not in general good practice
par("ylog") # FALSE
plot(1 : 12, log = "y")
par("ylog") # TRUE
plot(1:2, xaxs = "i") # 'inner axis' w/o extra space
par(c("usr", "xaxp"))
( nr.prof <-
c(prof.pilots = 16, lawyers = 11, farmers = 10, salesmen = 9, physicians = 9,
mechanics = 6, policemen = 6, managers = 6, engineers = 5, teachers = 4,
housewives = 3, students = 3, armed.forces = 1))
par(las = 3)
barplot(rbind(nr.prof)) # R 0.63.2: shows alignment problem
par(las = 0)  # reset to default
require(grDevices) # for gray
plot(1:12, type = "b", main = "'fg' : axes, ticks and box in gray",
fg = gray(0.7), bty = "7" , sub = R.version.string)
ex <- function() {
old.par <- par(no.readonly = TRUE) # all par settings which
# could be changed.
on.exit(par(old.par))
## ...
## ... do lots of par() settings and plots
## ...
invisible() #-- now,  par(old.par)  will be executed
}
ex()
## Line types
showLty <- function(ltys, xoff = 0, ...) {
stopifnot((n <- length(ltys)) >= 1)
op <- par(mar = rep(.5,4)); on.exit(par(op))
plot(0:1, 0:1, type = "n", axes = FALSE, ann = FALSE)
y <- (n:1)/(n+1)
clty <- as.character(ltys)
mytext <- function(x, y, txt)
text(x, y, txt, adj = c(0, -.3), cex = 0.8, ...)
abline(h = y, lty = ltys, ...); mytext(xoff, y, clty)
y <- y - 1/(3*(n+1))
abline(h = y, lty = ltys, lwd = 2, ...)
mytext(1/8+xoff, y, paste(clty," lwd = 2"))
}
showLty(c("solid", "dashed", "dotted", "dotdash", "longdash", "twodash"))
par(new = TRUE)  # the same:
showLty(c("solid", "44", "13", "1343", "73", "2262"), xoff = .2, col = 2)
showLty(c("11", "22", "33", "44",   "12", "13", "14",   "21", "31"))
par(no.readonly = True)
par(no.readonly = T)
opar <- par(no.readonly = T)
par(lty = 2, pch = 17)
plot(dose, drugA)
plot(dose, drugA, type = 'b')
opar <- par(no.readonly = T)
par(lty = 2, pch = 17)
par(opar)
opar <- par(no.readonly=TRUE)
par(lty=2, pch=17)
plot(dose, drugA, type="b")
par(opar)
plot(dose, drugA, type="b")
par(lty=2, pch=17)
opar <- par(no.readonly = T)
par(opar)
par(lty = 2, pch = 17)
par(opar)
opar <- par(no.readonly = T)
par(lty = 2, pch = 17)
plot(dose, drugA, type="b")
par(opar)
par(lty = 2, pch = 17)
plot(dose, drugA, type="b")
par(opar)
plot(dose, drugA, type="b")
opar
opar$lyt
plot(dose, drugB)
plot(dose, drugA, type = 'b', lty=3, pch=8)
plot(dose, drugA, type = 'b', lty=3, pch=7, lwd = 2, cex = 2)
?pch
?lty
?lty
?pch
?line
?tyope
?type
type(plot(dose, drugA, type = 'b', lty=3, pch=7, lwd = 2, cex = 2))
type()
typeof(plot(dose, drugA, type = 'b', lty=3, pch=7, lwd = 2, cex = 2))
plot(dose, drugA, type="b", lty=3, lwd=3, pch=15, cex=2)
?plot
?hsv
hsv(0.5, 0.5 , 0.5)
rgb(10, 10, 10)
rgb(0.5, 0.5, 0.5)
colors()
n <- 10
n <- 30
mycolors <- rainbow(n)
mycolors
pie(rep(1, n), labels = mycolors, col = mycolors)
mygrays <- gray(0:n/n)
pie(rep(1, n), labels=  mygrays, col = mygrays)
plot(dose, drugA)
plot(dose, drugA, type = 'b')
plot(dose, drugA, type = 'b', col = 'blue')
plot(dose, drugA, type = 'b', col = 'blue', fg = 'white')
plot(dose, drugA, type = 'b', col = 'blue', fg = 'white', bg = 'black')
'black' %in% colors()
plot(dose, drugA, type = 'b', col = 'blue', fg = 'white', bg = 'white')
plot(dose, drugA, type = 'b', col = 'blue', fg = 'orange', bg = 'purple')
'purple' %in% colors()
plot(dose, drugA, type = 'b', col = 'blue', fg = 'orange', bg = 'purpldasjf')
plot(dose, drugA, type = 'b', col = 'blue', fg = 'orange', bg = 'purple')
plot(dose, drugA, type = 'b', col = 'blue', fg = 'orange', bg = 'purple', col.axis='purple')
plot(dose, drugA, type = 'b', col = 'blue', fg = 'orange', bg = 'purple', col.axis='purple',col.lab='yellow')
par(font.lab=3, cex.lab=1.5, font.main=4, cex.main=2)
plot(dose, drugA, type ='b')
title("regression of drugA on dose")
par(font.lab=3, cex.lab=1.5, font.main=5, cex.main=2)
plot(dose, drugA, type ='b')
title("regression of drugA on dose")
par(font.lab=3, cex.lab=1.5, font.main=5, cex.main=2, font.axis = 4)
plot(dose, drugA, type ='b')
windowsFonts
windowsFonts()
pdfFonts()
names(pdfFonts())
getwd()
pdf(file="myplot.pdf", family = "serif")
plot(dose, drugA, type ='b')
dev.off()
pdf(file="myplot.pdf", family = "sans")
plot(dose, drugA, type ='b')
dev.off()
pdf(file="myplot.pdf", family = "sans")
pdf(file="myplot.pdf", family = "mono")
plot(dose, drugA, type ='b')
dev.off()
dev.off()
dev.off()
dev.new()
pdf(file="myplot.pdf", family = "mono")
plot(dose, drugA, type ='b')
dev.off()
pdf(file="myplot.pdf", family = "mono")
pdf(file="myplot.pdf", family = "Courier")
plot(dose, drugA, type ='b')
dev.off()
pdf(file="myplot.pdf", family = "Courier")
plot(dose, drugA, type ='b')
dev.off()''
dev.off()
dev.off()
pdf(file="myplot.pdf", family = "Courier")
plot(dose, drugA, type ='b')
dev.off()
dev.off()
pdf(file="my.pdf", family = "Courier")
plot(dose, drugA, type ='b')
dev.off()
par(pin = c(4, 3), mai = c(1, 0.5, 1, 0.2))
plot(dose, drugA, type ='b')
par(pin = c(4, 3), mai = c(2, 1, 2, 0.4))
plot(dose, drugA, type ='b')
par(pin = c(4, 3), mai = c(2, 2, 2, 2
))
plot(dose, drugA, type ='b')
par(pin = c(4, 3), mai = c(.2, .2, .2, 0.2))
plot(dose, drugA, type ='b')
opar <- par(no.readonly=TRUE)
par(pin=c(2, 3))
?pin
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
dose <- c(20, 30, 40, 45, 60)
drugA <- c(16, 20, 27, 40, 60)
drugB <- c(15, 18, 25, 31, 40)
opar <- par(no.readonly=TRUE)
par(pin=c(2, 3))
par(lwd=2, cex=1.5)
par(cex.axis=.75, font.axis=3)
plot(dose, drugA, type="b", pch=19, lty=2, col="red")
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
par(pin = c(4, 4))
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
par(pin = c(3, 3))
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
par(opar)
plot(dose, drugB, type="b", pch=23, lty=6, col="blue", bg="green")
help(par)
